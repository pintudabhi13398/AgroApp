@using Common;
@{
    //success messages
    var successMessages = new List<string>();
    if (TempData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Success)] != null)
    {
        successMessages.AddRange(TempData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Success)] as IList<string>);
    }
    if (ViewData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Success)] != null)
    {
        successMessages.AddRange(ViewData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Success)] as IList<string>);
    }
    if (Session[string.Format("tmp.notifications.{0}", Enums.NotifyType.Success)] != null)
    {
        successMessages.AddRange(Session[string.Format("tmp.notifications.{0}", Enums.NotifyType.Success)] as IList<string>);
        Session[string.Format("tmp.notifications.{0}", Enums.NotifyType.Success)] = null;
    }


    //error messages
    var errorMessages = new List<string>();
    if (TempData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Error)] != null)
    {
        errorMessages.AddRange(TempData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Error)] as IList<string>);
    }
    if (ViewData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Error)] != null)
    {
        errorMessages.AddRange(ViewData[string.Format("tmp.notifications.{0}", Enums.NotifyType.Error)] as IList<string>);
    }
    if (Session[string.Format("tmp.notifications.{0}", Enums.NotifyType.Error)] != null)
    {
        errorMessages.AddRange(Session[string.Format("tmp.notifications.{0}", Enums.NotifyType.Error)] as IList<string>);
        Session[string.Format("tmp.notifications.{0}", Enums.NotifyType.Error)] = null;
    }
}
@*<p>&nbsp;</p>*@
@foreach (var message in successMessages)
{
    <div class="success-notification alert alert-success" id="success-notification-div-for" style="display:none;">
        <button type="button" class="close closeSuccess">&times;</button>
        <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-success.png")" />
        <span>

            @Html.Raw(message)
            <script>
                    $(window).load(function () {
                        $("#success-notification-div-for").slideDown();
                });  
            </script>
           
        </span>
    </div>
}
@foreach (var message in errorMessages)
{
    <div class="error-notification alert alert-danger" id="error-notification-div-for" style="display:none;">
        <button type="button" class="close closeErrormsg">&times;</button>
        <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-error.png")" />
        <span>
            @Html.Raw(message)
            <script>
               
              $(window).load(function () {
                  $("#error-notification-div-for").slideDown();
              });
            </script>

        </span>
    </div>
}
<div class="success-notification alert alert-success" id="success-notification-div" style="display:none;">
    <button type="button" class="close closeSuccess">&times;</button>
    <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-success.png")" />
    <span id="successmsg">
    </span>
</div>
<div class="error-notification alert alert-danger" id="error-notification-div" style="display:none;">
    <button type="button" class="close closeErrormsg">&times;</button>
    <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-error.png")" />
    <span id="errormsg">
    </span>
</div>

<script>
    $(window).load(function () {
        setTimeout(function () {
            ClrearMessages();
        }, 6000);
    });
   
    function ShowSuccessMessage(message) {
        ClrearMessages();//clear message
        i = 0;
        $("#success-notification-div").slideDown();
        $("#successmsg").text(message);
        setTimeout(function () {
            ClrearMessages();
        }, 6000);
    }
    function ShowErrorMessage(message) {
        ClrearMessages();//clear message
        j = 0;
        $("#error-notification-div").slideDown();
        $("#errormsg").text(message);
        setTimeout(function () {
            ClrearMessages();
        }, 6000);
    }
    function ClrearMessages() {
        $("#success-notification-div").slideUp();
        $("#error-notification-div").slideUp();
        $("#success-notification-div-for").slideUp();
        $("#error-notification-div-for").slideUp();
    }
    function ShowErrorMessagePopUp(message) {
        ClrearMessages();//clear message
        j = 0;
        $(".popUp #error-notification-div").show();
        $(".popUp #errormsg").text(message);

    }
    function ShowSuccessMessagePopUp(message) {
        ClrearMessages();//clear message
        i = 0;
        $(".popUp #success-notification-div").show();
        $(".popUp #successmsg").text(message);
    }

    function DisplayResponseMessage(para)
    {
     
        if (para.type!='read' && para.response !=undefined  && para.response.Message != undefined ) {
            if ( para.response.IsError == '@System.Convert.ToInt32(Enums.NotifyType.Error)') {
                ShowErrorMessage(para.response.Message);
            }
            else {
                ShowSuccessMessage(para.response.Message);
            }
        }
    }

    function DisplayResponseMessageForAjax(data) {
        if (data != undefined) {
            if (data.IsError == '@System.Convert.ToInt32(Enums.NotifyType.Error)') {
                ShowErrorMessage(data.Message);
            }
            else {
                ShowSuccessMessage(data.Message);
            }
        }
    }

    $(document).ready(function () {
         $('.closeErrormsg').click(function () { $(".error-notification").fadeOut(10); });
        $('.closeSuccess').click(function () { $(".success-notification").fadeOut(10); });
    });


    function ClearAllValidation() {

        var $form = $('form');
        $form.validate().resetForm();
        $form.find("[data-valmsg-summary=true]")
            .removeClass("validation-summary-errors")
            .addClass("validation-summary-valid")
            .find("ul").empty();
        $form.find("[data-valmsg-replace]")
            .removeClass("field-validation-error")
            .addClass("field-validation-valid")
            .empty();
        $form.find(".k-invalid-msg")
           //.removeClass("field-validation-error")
           .css('display','none')
           .empty();
        
    }


     
        function configureSelectCheckBoxesItemForGrid(grid,idname) {
         
            // attach click event to select all check box
            grid.find("thead input:checkbox").click(
                function () {

                    grid.find("td input:checkbox").prop("checked", $(this).prop("checked"));
                    var ids = '';

                    $(grid.selector + " tbody tr").each(function () {
                        var $row = $(this).find('.chkbox');
                        if ($($row).is(":checked")) {
                            ids = ids + $row.val() + ',';
                        }
                    });

                    $(idname).val(ids);
                }
            );

            // attach click event to individual check box
            grid.find("tbody input:checkbox").click(
                function () {
                    var ids = '';
                  
                    $(grid.selector + " tbody tr").each(function () {

                        var $row = $(this).find('.chkbox');
                        if ($($row).is(":checked")) {
                            ids = ids + $row.val() + ',';
                        }
                    });

                    $(idname).val(ids);
                    var checkedCount = grid.find("td input:checkbox:checked").length;
                    var totalCount = grid.find("td input:checkbox").length;
                    grid.find("th input:checkbox").prop("checked", checkedCount === totalCount);
                }
            );
        }

  

</script>
